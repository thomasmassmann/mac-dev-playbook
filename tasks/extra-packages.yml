---
- name: Check installed nvm node versions
  shell: "source ~/.nvm/nvm.sh && nvm ls"
  register: installed_node_versions
  changed_when: false
  check_mode: false

- name: Check default nvm node version
  shell: "source ~/.nvm/nvm.sh && nvm alias default "
  register: configured_node_default_version
  changed_when: false
  check_mode: false

- name: Install nvm node versions
  shell: "source ~/.nvm/nvm.sh && nvm install {{ item }}"
  when: "item|string not in installed_node_versions.stdout"
  loop: "{{ node_versions }}"

- name: Set nvm node default version
  shell: "source ~/.nvm/nvm.sh && nvm alias default {{ node_default_version }}"
  when: "node_default_version|string not in configured_node_default_version.stdout"

- name: Install global Composer packages.
  composer:
    command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
    arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
    # Ansible 2.4 supports `global_command` making `working_dir` optional.
    working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
  loop: "{{ composer_packages }}"

- name: Install global NPM packages.
  npm:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ npm_packages }}"

- name: Install global Pip packages.
  pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default('pip3') }}"
  loop: "{{ pip_packages }}"

- name: Install global Ruby gems.
  gem:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    user_install: false
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ gem_packages }}"
